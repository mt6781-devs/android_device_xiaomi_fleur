<?xml version='1.0' encoding='UTF-8'?>
<!--
  Copyright (C) 2023 The LineageOS Project

  SPDX-License-Identifier: Apache-2.0
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate.

     NOTE: The naming convention is "config_camelCaseValue". Some legacy
     entries do not follow the convention, but all new entries should. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Array of desired screen brightness in nits corresponding to the lux values
      in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
      config_screenBrightnessMaximumNits, the display brightness is defined as the measured
      brightness of an all-white image.
      If this is defined then:
      - config_autoBrightnessLcdBacklightValues should not be defined
      - config_screenBrightnessNits must be defined
      - config_screenBrightnessBacklight must be defined
      This array should have size one greater than the size of the config_autoBrightnessLevels
      array. The brightness values must be non-negative and non-decreasing. This must be
      overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
          <item>3.5</item>
          <item>4.3</item>
          <item>5.0</item>
          <item>17.0</item>
          <item>24.0</item>
          <item>31.0</item>
          <item>34.0</item>
          <item>46.0</item>
          <item>59.0</item>
          <item>76.0</item>
          <item>82.0</item>
          <item>83.0</item>
          <item>83.0</item>
          <item>83.0</item>
          <item>84.0</item>
          <item>84.0</item>
          <item>84.0</item>
          <item>85.0</item>
          <item>85.0</item>
          <item>86.0</item>
          <item>87.0</item>
          <item>88.0</item>
          <item>89.0</item>
          <item>90.0</item>
          <item>92.0</item>
          <item>92.0</item>
          <item>92.0</item>
          <item>92.0</item>
          <item>95.0</item>
          <item>95.0</item>
          <item>96.0</item>
          <item>98.0</item>
          <item>99.0</item>
          <item>103.0</item>
          <item>106.0</item>
          <item>107.0</item>
          <item>110.0</item>
          <item>111.0</item>
          <item>112.0</item>
          <item>115.0</item>
          <item>116.0</item>
          <item>118.0</item>
          <item>119.0</item>
          <item>121.0</item>
          <item>123.0</item>
          <item>144.0</item>
          <item>164.0</item>
          <item>187.0</item>
          <item>212.0</item>
          <item>233.0</item>
          <item>264.0</item>
          <item>287.0</item>
          <item>305.0</item>
          <item>375.0</item>
          <item>402.0</item>
          <item>418.7</item>
          <item>435.3</item>
          <item>450.0</item>
          <item>466.7</item>
          <item>483.3</item>
          <item>500.0</item>
          <item>512.5</item>
          <item>525.0</item>
          <item>537.5</item>
          <item>550.0</item>
          <item>562.5</item>
          <item>575.0</item>
          <item>587.5</item>
          <item>600.0</item>
          <item>610.0</item>
          <item>620.0</item>
          <item>630.0</item>
          <item>640.0</item>
          <item>650.0</item>
          <item>660.0</item>
          <item>670.0</item>
          <item>680.0</item>
          <item>690.0</item>
          <item>700.0</item>
          <item>705.0</item>
          <item>710.0</item>
          <item>715.0</item>
          <item>720.0</item>
          <item>725.0</item>
          <item>730.0</item>
          <item>735.0</item>
          <item>740.0</item>
          <item>745.0</item>
          <item>750.0</item>
          <item>755.0</item>
          <item>760.0</item>
          <item>765.0</item>
          <item>770.0</item>
          <item>775.0</item>
          <item>800.0</item>
          <item>816.7</item>
          <item>833.3</item>
          <item>850.0</item>
          <item>866.7</item>
          <item>883.3</item>
          <item>900.0</item>
          <item>914.3</item>
          <item>928.6</item>
          <item>942.9</item>
          <item>957.1</item>
          <item>971.4</item>
          <item>985.7</item>
          <item>1000.0</item>
    </array>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
      The N entries of this array define N  1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
          <item>1</item>
          <item>2</item>
          <item>4</item>
          <item>6</item>
          <item>8</item>
          <item>10</item>
          <item>15</item>
          <item>20</item>
          <item>25</item>
          <item>30</item>
          <item>35</item>
          <item>40</item>
          <item>45</item>
          <item>50</item>
          <item>55</item>
          <item>60</item>
          <item>65</item>
          <item>70</item>
          <item>75</item>
          <item>80</item>
          <item>85</item>
          <item>90</item>
          <item>95</item>
          <item>100</item>
          <item>120</item>
          <item>140</item>
          <item>160</item>
          <item>180</item>
          <item>200</item>
          <item>220</item>
          <item>240</item>
          <item>260</item>
          <item>280</item>
          <item>300</item>
          <item>320</item>
          <item>340</item>
          <item>360</item>
          <item>380</item>
          <item>400</item>
          <item>420</item>
          <item>440</item>
          <item>460</item>
          <item>480</item>
          <item>500</item>
          <item>700</item>
          <item>900</item>
          <item>1100</item>
          <item>1300</item>
          <item>1500</item>
          <item>1700</item>
          <item>1900</item>
          <item>2000</item>
          <item>2500</item>
          <item>3000</item>
          <item>3500</item>
          <item>4000</item>
          <item>4500</item>
          <item>5000</item>
          <item>5500</item>
          <item>6000</item>
          <item>6500</item>
          <item>7000</item>
          <item>7500</item>
          <item>8000</item>
          <item>8500</item>
          <item>9000</item>
          <item>9500</item>
          <item>10000</item>
          <item>10500</item>
          <item>11000</item>
          <item>11500</item>
          <item>12000</item>
          <item>12500</item>
          <item>13000</item>
          <item>13500</item>
          <item>14000</item>
          <item>14500</item>
          <item>15000</item>
          <item>16000</item>
          <item>17000</item>
          <item>18000</item>
          <item>19000</item>
          <item>20000</item>
          <item>21000</item>
          <item>22000</item>
          <item>23000</item>
          <item>24000</item>
          <item>25000</item>
          <item>26000</item>
          <item>27000</item>
          <item>28000</item>
          <item>29000</item>
          <item>30000</item>
          <item>35000</item>
          <item>40000</item>
          <item>45000</item>
          <item>50000</item>
          <item>55000</item>
          <item>60000</item>
          <item>65000</item>
          <item>70000</item>
          <item>75000</item>
          <item>80000</item>
          <item>85000</item>
          <item>90000</item>
          <item>95000</item>
          <item>100000</item>
    </integer-array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.
         This array should be equal in size to config_screenBrightnessBacklight. -->
    <array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>255</item>
    </array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.
         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>4.5</item>
        <item>700</item>
    </array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_ambientBrighteningThresholds, and the new darkening
         hysteresis constraint value is the n-th element of config_ambientDarkeningThresholds.
         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                       calculated index
         value < level[0]                0
         level[n] <= value < level[n+1]  n+1
         level[MAX] <= value             MAX+1 -->
    <integer-array name="config_ambientThresholdLevels">
        <item>2</item>
        <item>10</item>
        <item>30</item>
        <item>100</item>
        <item>800</item>
        <item>2000</item>
        <item>4000</item>
    </integer-array>

   <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_ambientBrighteningThresholds">
        <item>2</item>
        <item>6</item>
        <item>10</item>
        <item>30</item>
        <item>100</item>
        <item>400</item>
        <item>600</item>
        <item>1000</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_ambientDarkeningThresholds">
        <item>800</item>
        <item>800</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
    </integer-array>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">1000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">2000</integer>

    <!-- The default refresh rate -->
    <integer name="config_defaultRefreshRate">0</integer>

    <!-- The default peak refresh rate for a given device. Change this value if you want to allow
         for higher refresh rates to be automatically used out of the box -->
    <integer name="config_defaultPeakRefreshRate">90</integer>

    <!-- Enable doze alwaysOn Display -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Doze: should the TYPE_PICK_UP_GESTURE sensor be used as a pulse signal. -->
    <bool name="config_dozePulsePickup">true</bool>

    <!-- True if the display hardware only has brightness buckets rather than a full range of
         backlight values -->
    <bool name="config_displayBrightnessBucketsInDoze">true</bool>

    <!-- If true, the display will be shifted around in ambient mode. -->
    <bool name="config_enableBurnInProtection">true</bool>

    <!-- Flag indicating whether we should enable the automatic brightness.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Minimum screen brightness setting allowed by power manager.
         -2 is invalid so setting will resort to int value specified above.
         Set this to 0.0 to allow screen to go to minimal brightness.
         The user is forbidden from setting the brightness below this level. -->
    <item name="config_screenBrightnessSettingMinimumFloat" format="float" type="dimen">0.00195407914</item>

    <!-- Maximum screen brightness allowed by the power manager.
         -2 is invalid so setting will resort to int value specified above.
         Set this to 1.0 for maximum brightness range.
         The user is forbidden from setting the brightness above this level. -->
    <item name="config_screenBrightnessSettingMaximumFloat" format="float" type="dimen">1.0</item>

    <!-- Default screen brightness setting set.
         -2 is invalid so setting will resort to int value specified above.
         Must be in the range specified by minimum and maximum. -->
    <item name="config_screenBrightnessSettingDefaultFloat" format="float" type="dimen">0.10942843185</item>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <item name="config_screenBrightnessDimFloat" format="float" type="dimen">8.54597E-4</item>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <item name="config_screenBrightnessDozeFloat" format="float" type="dimen">8.54597E-4</item>

    <!-- If true, the doze component is not started until after the screen has been
         turned off and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOff">true</bool>

    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.
         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
    <string name="config_dozeComponent" translatable="false">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.
         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.
         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.
         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.
         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to power.h for details.
    -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- Whether or not wcg mode should be enabled on this device -->
    <bool name="config_enableWcgMode">true</bool>

     <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.
         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display.
         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.
         Example for a 10px x 10px square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
         Example for a 10dp x 10dp square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>
         @see https://www.w3.org/TR/SVG/paths.html#PathData
         -->
    <string name="config_mainBuiltInDisplayCutout">M 0,0 H -37 V 93 H 37 V 0 H 0 Z</string>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- Boolean indicating USSD over IMS is allowed.
     If it is not supported due to modem limitations, USSD send over the CS pipe instead.-->
    <bool name="config_allow_ussd_over_ims">true</bool>

    <!-- Flag specifying whether WFC over IMS is available on device -->
    <bool name="config_device_wfc_ims_available">true</bool>

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VT is available on device -->
    <bool name="config_device_vt_available">true</bool>

    <!-- Whether this device is supporting the camera toggle -->
    <bool name="config_supportsCamToggle">true</bool>

    <!-- Whether this device is supporting the software microphone toggle -->
    <bool name="config_supportsMicToggle">true</bool>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- True if the device supports Sustained Performance Mode -->
    <bool name="config_sustainedPerformanceModeSupported">true</bool>

    <!-- Whether UI for multi user should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
    <integer name="config_shutdownBatteryTemperature">580</integer>

    <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
    <integer name="config_num_physical_slots">2</integer>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- Whether the device enable the standalone (SA) mode of 5G NR.-->
    <bool name="config_telephony5gStandalone">false</bool>

    <!-- Whether the device enable the non-standalone (NSA) mode of 5G NR.-->
    <bool name="config_telephony5gNonStandalone">false</bool>

    <!-- Is the device capable of hot swapping an UICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Server audio_policy_configuration.xml file must specify a rule for
           the "r_submix" remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

     <!-- Indicates whether device has a power button fingerprint sensor. -->
     <bool name="config_is_powerbutton_fps" translatable="false">true</bool>

     <!-- An array of arrays of side fingerprint sensor properties relative to each display.
         Note: this value is temporary and is expected to be queried directly
         from the HAL in the future. -->
     <array name="config_sfps_sensor_props" translatable="false">
          <item>@array/config_sfps_sensor_props_main</item>
     </array>
     
     <array name="config_sfps_sensor_props_main" translatable="false">
          <item></item> <!-- Display ID -->
          <item>1080</item> <!-- Sensor X Location -->
          <item>915</item> <!-- Sensor Y Location -->
          <item>145</item> <!-- Sensor Radius -->
     </array>

    <!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
         when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
         where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
         and Strength as defined in Authenticators.java -->
    <string-array name="config_biometric_sensors">
        <item>0:2:15</item>
    </string-array>

    <!-- Enables or disables haptic effect when the text insertion/selection handle is moved
         manually by the user. Off by default, since the expected haptic feedback may not be
         available on some devices. -->
    <bool name="config_enableHapticTextHandle">true</bool>

   <!-- The max scale for the wallpaper when it's zoomed in -->
    <item name="config_wallpaperMaxScale" format="float" type="dimen">1</item>

    <!-- media controls -->
    <bool name="config_mediaControlsTurbulenceByDefault">false</bool>
</resources>
